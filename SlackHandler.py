from slack_sdk import WebClient
from slack_sdk.scim import SCIMClient, Group
from slack_sdk.scim.v1.user import User, UserName, UserEmail
import Constants

# https://slack.dev/python-slack-sdk/scim/index.html
class SlackHandler:
    def __init__(self, scimToken: str) -> None:
        client = SCIMClient(token=Constants.SLACK_SCIM_TOKEN)
        self.client = client
    
    def checkConnection(self) -> None:
        resp = self.client.api_test()
        print(resp)
    
    def getUserAutoGenerated(self, userId: str) -> User:
        response = self.client.read_user(id=userId)
        return response.body

    def searchUsers(self, startIndex: int, count: int, filter: str = "") -> list:
        # get some users, read id from this
        response = self.client.search_users(
            start_index=startIndex,
            count=count,
            filter=filter,
            # filter="""filter=userName Eq 'gakulkarni' """,
        )
        return response.body

    def getGroupAutogenerated(self, groupId: str) -> Group:
        response = self.client.read_group(id=groupId)
        return response.body
    
    def getGroups(self, startIndex: int, count: int) -> Group:
        groups = self.client.search_groups(
            start_index=1,
            count=10,
        )

        print(groups.body)
        return groups.body


    def createGroup(self, groupName: str, members: list) -> Group:
        newGroup = Group(display_name=groupName, members=members)
        response = self.client.create_group(newGroup)
        return response.body

# newGroup = Group(display_name="SkyteamTest", members=[{'value': 'U04GB9TH6KW', 'display': 'Shubham Pareek'}, {'value': 'U04F2BQE05D', 'display': 'David Hyman'}, ])
# response = client.create_group(newGroup)

# print(response.body)
# msgBody = {
#     "schemas": [
#         "urn:scim:schemas:core:1.0"
#     ],
#     "members": [
#         {
#             "value": "userId",
#             "operation": "delete"
#         },
#         {
#             # add is done by default
#             "value": "U333CCC333"
#         }
#     ]
# }


# client.create_group(id="groupId", )